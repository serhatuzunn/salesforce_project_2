//
// Generated by JSON2Apex http://json2apex.herokuapp.com/
//

public class RC_SD_DocumentUpdateParser {

	public class Item {
		public String VBELN {get;set;} 
		public String AEDAT {get;set;} 
		public String STATUS {get;set;} 

		public Item(JSONParser parser) {
			while (parser.nextToken() != System.JSONToken.END_OBJECT) {
				if (parser.getCurrentToken() == System.JSONToken.FIELD_NAME) {
					String text = parser.getText();
					if (parser.nextToken() != System.JSONToken.VALUE_NULL) {
						if (text == 'VBELN') {
							VBELN = parser.getText();
						} else if (text == 'AEDAT') {
							AEDAT = parser.getText();
						} else if (text == 'STATUS') {
							STATUS = parser.getText();
						} else {
							System.debug(LoggingLevel.WARN, 'Item consuming unrecognized property: '+text);
							consumeObject(parser);
						}
					}
				}
			}
		}
	}
	
	public class ET_CHNG_ORDERS {
		public List<Item_Z> item {get;set;} 

		public ET_CHNG_ORDERS(JSONParser parser) {
			while (parser.nextToken() != System.JSONToken.END_OBJECT) {
				if (parser.getCurrentToken() == System.JSONToken.FIELD_NAME) {
					String text = parser.getText();
					if (parser.nextToken() != System.JSONToken.VALUE_NULL) {
						if (text == 'item') {
							item = arrayOfItem_Z(parser);
						} else {
							System.debug(LoggingLevel.WARN, 'ET_CHNG_ORDERS consuming unrecognized property: '+text);
							consumeObject(parser);
						}
					}
				}
			}
		}
	}
	
	public class ET_CHNG_DELIV {
		public List<Item> item {get;set;} 

		public ET_CHNG_DELIV(JSONParser parser) {
			while (parser.nextToken() != System.JSONToken.END_OBJECT) {
				if (parser.getCurrentToken() == System.JSONToken.FIELD_NAME) {
					String text = parser.getText();
					if (parser.nextToken() != System.JSONToken.VALUE_NULL) {
						if (text == 'item') {
							item = arrayOfItem(parser);
						} else {
							System.debug(LoggingLevel.WARN, 'ET_CHNG_DELIV consuming unrecognized property: '+text);
							consumeObject(parser);
						}
					}
				}
			}
		}
	}
	
	public ET_CHNG_DELIV ET_CHNG_DELIV {get;set;} 
	public ET_CHNG_ORDERS ET_CHNG_ORDERS {get;set;} 

	public RC_SD_DocumentUpdateParser (JSONParser parser) {
		while (parser.nextToken() != System.JSONToken.END_OBJECT) {
			if (parser.getCurrentToken() == System.JSONToken.FIELD_NAME) {
				String text = parser.getText();
				if (parser.nextToken() != System.JSONToken.VALUE_NULL) {
					if (text == 'ET_CHNG_DELIV') {
						ET_CHNG_DELIV = new ET_CHNG_DELIV(parser);
					} else if (text == 'ET_CHNG_ORDERS') {
						ET_CHNG_ORDERS = new ET_CHNG_ORDERS(parser);
					} else {
						System.debug(LoggingLevel.WARN, 'RC_UpdateOrdersParser consuming unrecognized property: '+text);
						consumeObject(parser);
					}
				}
			}
		}
	}
	
	public class Item_Z {
		public String VBELN {get;set;} 
		public String AEDAT {get;set;} 

		public Item_Z(JSONParser parser) {
			while (parser.nextToken() != System.JSONToken.END_OBJECT) {
				if (parser.getCurrentToken() == System.JSONToken.FIELD_NAME) {
					String text = parser.getText();
					if (parser.nextToken() != System.JSONToken.VALUE_NULL) {
						if (text == 'VBELN') {
							VBELN = parser.getText();
						} else if (text == 'AEDAT') {
							AEDAT = parser.getText();
						} else {
							System.debug(LoggingLevel.WARN, 'Item_Z consuming unrecognized property: '+text);
							consumeObject(parser);
						}
					}
				}
			}
		}
	}
	
	
	public static RC_SD_DocumentUpdateParser parse(String json) {
		System.JSONParser parser = System.JSON.createParser(json);
		return new RC_SD_DocumentUpdateParser(parser);
	}
	
	public static void consumeObject(System.JSONParser parser) {
		Integer depth = 0;
		do {
			System.JSONToken curr = parser.getCurrentToken();
			if (curr == System.JSONToken.START_OBJECT || 
				curr == System.JSONToken.START_ARRAY) {
				depth++;
			} else if (curr == System.JSONToken.END_OBJECT ||
				curr == System.JSONToken.END_ARRAY) {
				depth--;
			}
		} while (depth > 0 && parser.nextToken() != null);
	}
	


    private static List<Item_Z> arrayOfItem_Z(System.JSONParser p) {
        List<Item_Z> res = new List<Item_Z>();
        if (p.getCurrentToken() == null) p.nextToken();
        while (p.nextToken() != System.JSONToken.END_ARRAY) {
            res.add(new Item_Z(p));
        }
        return res;
    }







    private static List<Item> arrayOfItem(System.JSONParser p) {
        List<Item> res = new List<Item>();
        if (p.getCurrentToken() == null) p.nextToken();
        while (p.nextToken() != System.JSONToken.END_ARRAY) {
            res.add(new Item(p));
        }
        return res;
    }



}